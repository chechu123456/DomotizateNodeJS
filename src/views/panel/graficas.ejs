<script>
    let datosSensores = <%-sensoresValoresPorCasa%>;
    let idCasa = <%-idCasa%>;

    let tempMax = <%-tempMax%>;
    let tempMin = <%-tempMax%>;

    let humMax = <%-humMax%>;
    let humMin = <%-humMin%>;

    let temps = <%-temps%>;
    let hums = <%-hums%>;

    let tempMaxDia = JSON.parse(JSON.stringify(tempMax[0]));
    let tempMaxMes = JSON.parse(JSON.stringify(tempMax[1]));
    let tempMaxAno = JSON.parse(JSON.stringify(tempMax[2]));

    let tempMinDia = JSON.parse(JSON.stringify(tempMin[0]));
    let tempMinMes = JSON.parse(JSON.stringify(tempMin[1]));
    let tempMinAno = JSON.parse(JSON.stringify(tempMin[2]));


    let humMaxDia = JSON.parse(JSON.stringify(humMax[0]));
    let humMaxMes = JSON.parse(JSON.stringify(humMax[1]));
    let humMaxAno = JSON.parse(JSON.stringify(humMax[2]));

    let humMinDia = JSON.parse(JSON.stringify(humMin[0]));
    let humMinMes = JSON.parse(JSON.stringify(humMin[1]));
    let humMinAno = JSON.parse(JSON.stringify(humMin[2]));

    let tempsDia = JSON.parse(JSON.stringify(temps[0]));
    let tempsMes = JSON.parse(JSON.stringify(temps[1]));
    let tempsAno = JSON.parse(JSON.stringify(temps[2]));

    let humsDia = JSON.parse(JSON.stringify(hums[0]));
    let humsMes = JSON.parse(JSON.stringify(hums[1]));
    let humsAno = JSON.parse(JSON.stringify(hums[2]));

    console.log(JSON.stringify(tempMin));

    console.log(tempsMes);

   
    //Coger los valores necesarios para la Temperatura y Humedad máxima y mínima

    (tempMaxDia == "" ? tempMaxDia = "-" : tempMaxDia = JSON.parse(JSON.stringify(tempMaxDia[0].valor)) );
    (tempMaxMes == "" ? tempMaxMes = "-" : tempMaxMes = JSON.parse(JSON.stringify(tempMaxMes[0].valor)));
    (tempMaxAno == "" ? tempMaxAno = "-" : tempMaxAno = JSON.parse(JSON.stringify(tempMaxAno[0].valor)));


    (tempMinDia == "" ? tempMinDia = "-" : tempMinDia = JSON.parse(JSON.stringify(tempMinDia[0].valor)));
    (tempMinMes == "" ? tempMinMes = "-" : tempMinMes = JSON.parse(JSON.stringify(tempMinMes[0].valor)));
    (tempMinAno == "" ? tempMinAno = "-" : tempMinAno = JSON.parse(JSON.stringify(tempMinAno[0].valor)));


    (humMaxDia == "" ? humMaxDia = "-" : humMaxDia = JSON.parse(JSON.stringify(humMaxDia[0].valor)));
    (humMaxMes == "" ? humMaxMes = "-" : humMaxMes = JSON.parse(JSON.stringify(humMaxMes[0].valor)));
    (humMaxAno == "" ? humMaxAno = "-" : humMaxAno = JSON.parse(JSON.stringify(humMaxAno[0].valor)));

    (humMinDia == "" ? humMinDia = "-" : humMinDia = JSON.parse(JSON.stringify(humMinDia[0].valor)));
    (humMinMes == "" ? humMinMes = "-" : humMinMes = JSON.parse(JSON.stringify(humMinMes[0].valor)));
    (humMinAno == "" ? humMinAno = "-" : humMinAno = JSON.parse(JSON.stringify(humMinAno[0].valor)));

    //----Guardar las fechas de todos los resultados de TEMPERATURA----//
    //Fechas Dia
    let fechasTempD = [];
    for(let key in tempsDia) {
        valoresFechas = JSON.parse(JSON.stringify(tempsDia[key].fechaRegistro));
        date = new Date(valoresFechas);
        valoresFechas = date.getFullYear() + "-" + date.getMonth() + "-" + date.getDate() + " " + date.getHours() + ":" + date.getMinutes() + ":" +  date.getSeconds() ;
        fechasTempD.push(valoresFechas);
    }

    //Fechas Mensuales
    let fechasTempM = [];
    for(let key in tempsMes) {
        valoresFechas = JSON.parse(JSON.stringify(tempsMes[key].fechaRegistro));
        date = new Date(valoresFechas);
        valoresFechas = date.getFullYear() + "-" + date.getMonth() + "-" + date.getDate()  + " " + date.getHours() + ":" + date.getMinutes() + ":"  +  date.getSeconds();
        fechasTempM.push(valoresFechas);
    }

    //Fechas Anuales
    let fechasTempA = [];
    for(let key in tempsAno) {
        valoresFechas = JSON.parse(JSON.stringify(tempsAno[key].fechaRegistro));
        date = new Date(valoresFechas);
        valoresFechas = date.getFullYear() + "-" + date.getMonth() + "-" + date.getDate()  + " " + date.getHours() + ":" + date.getMinutes() + ":" +  date.getSeconds();
        fechasTempA.push(valoresFechas);
    }

    //----Guardar los valores de todos los resultados de TEMPERATURA----//
    //Valores Dia
    let valoresTempD = [];
    for(let key in tempsDia) {
        valoresFechas = JSON.parse(JSON.stringify(tempsDia[key].valor));
        valoresTempD.push(valoresFechas);
    }

    //Valores Mensuales
    let valoresTempM = [];
    for(let key in tempsMes) {
        valoresFechas = JSON.parse(JSON.stringify(tempsMes[key].valor));
        valoresTempM.push(valoresFechas);
    }

    //Valores Anuales
    let valoresTempA = [];
    for(let key in tempsAno) {
        valoresFechas = JSON.parse(JSON.stringify(tempsAno[key].valor));
        valoresTempA.push(valoresFechas);
    }

    //----Guardar las fechas de todos los resultados de HUMEDAD----//
    //Fechas Dia
    let fechasHumD = [];
    for(let key in humsDia) {
        valoresFechas = JSON.parse(JSON.stringify(humsDia[key].fechaRegistro));
        date = new Date(valoresFechas);
        valoresFechas = date.getFullYear() + "-" + date.getMonth() + "-" + date.getDate()  + " " + date.getHours() + ":" + date.getMinutes() + ":"  + date.getSeconds();
        fechasHumD.push(valoresFechas);
    }

    //Fechas Mensuales
    let fechasHumM = [];
    for(let key in humsMes) {
        valoresFechas = JSON.parse(JSON.stringify(humsMes[key].fechaRegistro));
        date = new Date(valoresFechas);
        valoresFechas = date.getFullYear() + "-" + date.getMonth() + "-" + date.getDate()  + " " + date.getHours() + ":" + date.getMinutes() + ":" +  date.getSeconds();
        fechasHumM.push(valoresFechas);
    }

    //Fechas Anuales
    let fechasHumA = [];
    for(let key in humsAno) {
        valoresFechas = JSON.parse(JSON.stringify(humsAno[key].fechaRegistro));
        date = new Date(valoresFechas);
        valoresFechas = date.getFullYear() + "-" + date.getMonth() + "-" + date.getDate()  + " " + date.getHours() + ":" + date.getMinutes() + ":" +  date.getSeconds();
        fechasHumA.push(valoresFechas);
    }

    //----Guardar los valores de todos los resultados de HUMEDAD----//
    //Valores Dia
    let valoresHumD = [];
    for(let key in humsDia) {
        valoresFechas = JSON.parse(JSON.stringify(humsDia[key].valor));
        valoresHumD.push(valoresFechas);
    }

    //Valores Mensuales
    let valoresHumM = [];
    for(let key in humsMes) {
        valoresFechas = JSON.parse(JSON.stringify(humsMes[key].valor));
        valoresHumM.push(valoresFechas);
    }

    //Valores Anuales
    let valoresHumA = [];
    for(let key in humsAno) {
        valoresFechas = JSON.parse(JSON.stringify(humsAno[key].valor));
        valoresHumA.push(valoresFechas);
    }

</script>

<!DOCTYPE html>
<html lang="es">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>DOMOTIZATE</title>
    <%- include("../partials/_cabecera_panel.ejs"); %>
</head>

<body class="configPanel graficasPanel">
    <img src="/public/imagenes/iconos/exit.svg" alt="Cerrar Sesión" class="icoCerrarSesion"></a>
    <div class="fondoPanel">
        <%- include("../partials/_menupanel.ejs"); %>
        <div class="contenedorPagPanel ">
            <div class="titPrincPanel">
                <h1>Panel Control <% if(nombCasa){ %> - <%=nombCasa %> <%}%></h1>
            </div>
            <div class="contGraficas contConfiguracion paneles">
                <div class="titConfigPanel">
                    <p>GRÁFICAS</p>
                    <hr>
                </div>
                <div class="grafTemp">
                    <div class="contSupTemp">
                        <div class="filtradoGraficas">
                            <h3>Temperatura</h3>
                            <select name="fechaTemp" id="fechaTemp">
                                <option value="diaTemp">Día</option>
                                <option value="mesTemp">Mes</option>
                                <option value="anhoTemp">Año</option>
                            </select>
                        </div>
                        <div class="iconosTemp">
                            <div class="maxTemp">
                                <img src="/public/imagenes/iconos/maxTemp.png" alt="Máxima Temperatura" title="Máxima temperatura">
                                <p id="valorMaxTemp">-</p>
                            </div>
                            <div class="minTemp">
                                <img src="/public/imagenes/iconos/minTemp.png" alt="Mínima Temperatura" title="Mínima temperatura">
                                <p id="valorMinTemp">-</p>
                            </div>
                        </div>
                    </div>
                    <div class="contInfTemp">
                        <div id="contGraficaTemp">

                        </div>
                    </div>
                </div>
                <div class="grafHum">
                    <div class="contSupHum">
                        <div class="filtradoGraficas">
                            <h3>Humedad</h3>
                            <select name="fechaHum" id="fechaHum">
                                <option value="diaHum">Día</option>
                                <option value="mesHum">Mes</option>
                                <option value="anhoHum">Año</option>
                            </select>
                        </div>
                        <div class="iconosHum">
                            <div class="maxHum">
                                <img src="/public/imagenes/iconos/maxHum.png" alt="Máxima Humedad" title="Máxima humedad">
                                <p id="valorMaxHum">-</p>
                            </div>
                            <div class="minHum">
                                <img src="/public/imagenes/iconos/minHum.png" alt="Mínima Humedad" title="Mínima humedad">
                                <p id="valorMinHum">-</p>
                            </div>
                        </div>
                    </div>
                    <div class="contInfHum">
                        <div id="contGraficaHum">

                        </div>
                    </div>
                </div>
            </div>

            <div class="piePagPanel">
                <div class="estadoArduino">
                    <p>Estado: <span class="textoEstadoArduino">Conectado</span></p>
                    <div class="formaCirculo"></div>
                </div>
                <div class="logoPagPanel">
                    <p><a href="/admin/index">DOMOTIZATE</a></p>
                </div>
            </div>
        </div>
    </div>

    <script>
        $(document).ready(function(){
            console.log((fechasHumD));
            console.log((valoresHumD));

            var data = [{
                x: fechasTempD,
                y: valoresTempD,
                type: 'scatter'
            }];

            var layout = {
                title: 'Hoy',
            };

            var config = {responsive: true}

            Plotly.newPlot('contGraficaTemp', data, layout, config);

            $("#valorMaxTemp").html(tempMaxDia);
            $("#valorMinTemp").html(tempMinDia);

            $("#valorMaxHum").html(humMaxDia);
            $("#valorMinHum").html(humMinDia);

            var dataHum = [{
                x: fechasHumD,
                y: valoresHumD,
                type: 'scatter'
            }];

            var layout = {
                title: 'Hoy',
            };

            var config = {responsive: true}

            Plotly.newPlot('contGraficaHum', dataHum, layout, config);
           

            /* Poner fondo sobre la opción seleccionada en el menu vertical */

            $(".iconoMP:nth-child(2)").css("background-color", "#293B97");

            //Estado arduino
            ( JSON.parse(JSON.stringify(datosSensores[0][0].valor) == 1 ) ? $(".formaCirculo").addClass("conectado") : $(".formaCirculo").addClass("desconectado") );


            if ($(".formaCirculo").attr("class").split(' ')[1] == "conectado") {
                $(".textoEstadoArduino").html("Conectado");
            } else if ($(".formaCirculo").attr("class").split(' ')[1] == "desconectado") {
                $(".textoEstadoArduino").html("Desconectado");
            }
        });

     


        $(document).on("change", "#fechaTemp", function() {
            if ($("#fechaTemp option:selected").text() == "Día") {
                //console.log("Has elegido dia");
                $("#valorMaxTemp").html(tempMaxDia);
                $("#valorMinTemp").html(tempMinDia);


                var dataTemp = [{
                    x: fechasTempD,
                    y: valoresTempD,
                    type: 'scatter'
                }];

                var layout = {
                    title: 'Hoy',
                };


                Plotly.newPlot('contGraficaTemp', dataTemp, layout);
                
                
            } else if ($("#fechaTemp option:selected").text() == "Mes") {
                //console.log("Has elegido mes");
                $("#valorMaxTemp").html(tempMaxMes);
                $("#valorMinTemp").html(tempMinMes);

                var dataTemp = [{
                    x: fechasTempM,
                    y: valoresTempM,
                    type: 'scatter'
                }];
/*
                var layout = {
                    autorange: true,
                    xaxis: {
                        range: ['<?=date('Y-m-01')?>', '<?=date('Y-m-t')?>'],
                        type: 'date'
                    }
                };
*/

                Plotly.newPlot('contGraficaTemp', dataTemp, layout);

            } else if ($("#fechaTemp option:selected").text() == "Año") {
                //console.log("Has elegido año");
                $("#valorMaxTemp").html(tempMaxAno);
                $("#valorMinTemp").html(tempMinAno);

                var dataTemp = [{
                    x: fechasTempA,
                    y: valoresTempA,
                    type: 'scatter'
                }];

                /*
                var layout = {
                    autorange: true,
                    xaxis: {
                        range: ['<?=date('Y-01-01')?>', '<?=date('Y-12-t')?>'],
                        type: 'date'
                    }
                };
                */

                Plotly.newPlot('contGraficaTemp', dataTemp);
            }
        });

        $(document).on("change", "#fechaHum", function() {
            if ($("#fechaHum option:selected").text() == "Día") {
                //console.log("Has elegido dia");
                $("#valorMaxHum").html(humMaxDia);
                $("#valorMinHum").html(humMinDia);


                var dataHum = [{
                    x: fechaHumD,
                    y: valoresHumD,
                    type: 'scatter'
                }];

                var layout = {
                    title: 'Hoy',
                };

                Plotly.newPlot('contGraficaHum', dataHum, layout);

                
            } else if ($("#fechaHum option:selected").text() == "Mes") {
                //console.log("Has elegido mes");
                $("#valorMaxHum").html(humMaxMes);
                $("#valorMinHum").html(humMinMes);

                var dataHum = [{
                    x: fechasHumM,
                    y: valoresHumM,
                    type: 'scatter'
                }];
/*
                var layout = {
                    xaxis: {
                        range: ['<?=date('Y-m-01')?>', '<?=date('Y-m-t')?>'],
                        type: 'date'
                    }
                };
*/

                Plotly.newPlot('contGraficaHum', dataHum, layout);

            } else if ($("#fechaHum option:selected").text() == "Año") {
                //console.log("Has elegido año");
                $("#valorMaxHum").html(HumMaxAno);
                $("#valorMinHum").html(humMinAno);

                var dataHum = [{
                    x: fechasHumAño,
                    y: valoresHumAño,
                    type: 'scatter'
                }];

                /*
                var layout = {
                    autorange: true,
                    xaxis: {
                        range: ['<?=date('Y-01-01')?>', '<?=date('Y-12-t')?>'],
                        type: 'date'
                    }
                };
                */


                //Plotly.newPlot('contGraficaHum', dataHum, layout);

                Plotly.newPlot('contGraficaHum', dataHum);
            }
        });

        $(document).on("click", ".icoCerrarSesion", function() {
            window.location.href = "/admin/cerrarSesion";
        });


        //Cambiar texto CONECTADO / DESCONECTADO
        function recuperarValores() {

            //AJAX - Guardar cambios en la bd
            $.ajax({
                    method: "POST",
                    url: " /admin/actualizarValoresPanel",
                    data: {
                        idCasa: idCasa,
                    },
                })
                .done(function(data) {
                    //console.log(data);

                    var msgRecibido = data.split(";");
                    var estadoArduino = "arduino=1";

                    //console.log(msgRecibido);

                    if (msgRecibido[0].includes(estadoArduino)) {
                        if ($(".formaCirculo").attr("class").split(' ')[1] == "desconectado") {
                            $(".textoEstadoArduino").html("Conectado");
                            $(".formaCirculo").removeClass("desconectado");
                            $(".formaCirculo").addClass("conectado");
                        }
                    } else {
                        if ($(".formaCirculo").attr("class").split(' ')[1] == "conectado") {
                            $(".textoEstadoArduino").html("Desconectado");
                            $(".formaCirculo").removeClass("conectado");
                            $(".formaCirculo").addClass("desconectado");
                        }
                    }

                })
                .fail(function() {
                    console.error('Error: No se han podido recuperar los datos de la temperatura, la humedad y del estado del arduino');
                });
        }

        //Ejecutar funcion repetidamente
        setInterval(function() {
            recuperarValores();
        }, 5000);

    
    </script>
</body>

</html>